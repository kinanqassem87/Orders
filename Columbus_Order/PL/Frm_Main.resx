<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="menuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        YII=
</value>
  </data>
</root>